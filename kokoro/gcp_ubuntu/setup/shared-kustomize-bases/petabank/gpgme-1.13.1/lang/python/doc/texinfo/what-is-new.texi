\input texinfo    @c -*- texinfo -*-
@c %**start of header
@setfilename what-is-new.info
@settitle What's New in the GPGME Python Bindings and Documentation
@documentencoding utf-8
@documentlanguage en
@c %**end of header

@finalout
@titlepage
@title What's New in the GPGME Python Bindings and Documentation
@author Ben McGinnes
@end titlepage

@contents

@ifnottex
@node Top
@top What's New in the GPGME Python Bindings and Documentation
@end ifnottex

@menu
* What's New::

@detailmenu
--- The Detailed Node Listing ---

What's New

* New in GPGME 1·13·0::

@end detailmenu
@end menu

@node What's New
@chapter What's New

@multitable {aaaaaaaaaaaaaaa} {aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa}
@item Version:
@tab 0.0.1
@item GPGME Version:
@tab 1.13.0
@item Author:
@tab Ben McGinnes <ben@@gnupg.org>
@item Author GPG Key:
@tab DB4724E6FA4286C92B4E55C4321E4E2373590E5D
@item Language:
@tab Australian English, British English
@item xml:lang:
@tab en-AU, en-GB, en
@end multitable

Last time the most obviously new thing was adding the @emph{What's New}
section to the HOWTO.  Now it's moving it out of the HOWTO.

@menu
* New in GPGME 1·13·0::
@end menu

@node New in GPGME 1·13·0
@section New in GPGME 1·13·0

Additions since GPGME 1.12.0 include:

@itemize
@item
Moving the @emph{What's New} section out of the basic @uref{gpgme-python-howto.org, HOWTO} document and
into its own file so as to more readily include other documents
beyond that HOWTO.
@item
Moving the preceding, archival, segments into @uref{what-was-new.org, another file}.
@item
Added @samp{gpg.version.versionintlist} to make it easier for Python
developers to check for a specific version number, even with beta
versions (it will drop the "-betaN" part).
@item
Added expanded detail on issues pertaining to installing for Windows
users.
@item
Bindings enter @uref{maintenance-mode, maintenance mode} from January, 2019.
@item
Added documentation on maintenance mode and what changes can be made
to the code when in that status.  Essentially that boils down to bug
fixes only and no feature requests.
@item
The import-keys-hkp.py example script, which uses the @samp{hkp4py}
module to search the SKS servers for a key, has been tightened up to
search for both hexadecimal key IDs and user ID strings with reduced
chance of unnecessary repitition.  There may still be some
repetition if a key includes a user ID matching the hexadecimal
value of a key ID.
@end itemize

@bye